
typedef union 
{
	int number;
	unsigned int address;	/* Address of an instruction */
	char *string;
	short type;
	struct { int key; char block; } case_label;
	struct function *funp;
} YYSTYPE;
extern YYSTYPE yylval;
# define F_JUMP 257
# define F_JUMP_WHEN_ZERO 258
# define F_JUMP_WHEN_NON_ZERO 259
# define F_POP_VALUE 260
# define F_DUP 261
# define F_STORE 262
# define F_CALL_DOWN 263
# define F_CALL_SELF 264
# define F_PUSH_IDENTIFIER_LVALUE 265
# define F_PUSH_LOCAL_VARIABLE_LVALUE 266
# define F_PUSH_INDEXED_LVALUE 267
# define F_INDIRECT 268
# define F_INDEX 269
# define F_CONST0 270
# define F_CONST1 271
# define F_CLASS_MEMBER_LVALUE 272
# define F_CALL_EFUN 273
# define F_CASE 274
# define F_DEFAULT 275
# define F_RANGE 276
# define F_IF 277
# define F_IDENTIFIER 278
# define F_LAND 279
# define F_LOR 280
# define F_STATUS 281
# define F_RETURN 282
# define F_STRING 283
# define F_INC 284
# define F_DEC 285
# define F_POST_INC 286
# define F_POST_DEC 287
# define F_COMMA 288
# define F_NUMBER 289
# define F_ASSIGN 290
# define F_INT 291
# define F_ADD 292
# define F_SUBTRACT 293
# define F_MULTIPLY 294
# define F_DIVIDE 295
# define F_LT 296
# define F_GT 297
# define F_EQ 298
# define F_GE 299
# define F_LE 300
# define F_NE 301
# define F_ADD_EQ 302
# define F_SUB_EQ 303
# define F_DIV_EQ 304
# define F_MULT_EQ 305
# define F_NEGATE 306
# define F_SUBSCRIPT 307
# define F_WHILE 308
# define F_BREAK 309
# define F_POP_BREAK 310
# define F_DO 311
# define F_FOR 312
# define F_SWITCH 313
# define F_SSCANF 314
# define F_PARSE_COMMAND 315
# define F_STRING_DECL 316
# define F_LOCAL_NAME 317
# define F_ELSE 318
# define F_CONTINUE 319
# define F_MOD 320
# define F_MOD_EQ 321
# define F_INHERIT 322
# define F_COLON_COLON 323
# define F_STATIC 324
# define F_ARROW 325
# define F_AGGREGATE 326
# define F_AGGREGATE_ASSOC 327
# define F_COMPL 328
# define F_AND 329
# define F_AND_EQ 330
# define F_OR 331
# define F_OR_EQ 332
# define F_XOR 333
# define F_XOR_EQ 334
# define F_LSH 335
# define F_LSH_EQ 336
# define F_RSH 337
# define F_RSH_EQ 338
# define F_CATCH 339
# define F_END_CATCH 340
# define F_MAPPING 341
# define F_OBJECT 342
# define F_VOID 343
# define F_MIXED 344
# define F_PRIVATE 345
# define F_NO_MASK 346
# define F_NOT 347
# define F_PROTECTED 348
# define F_PUBLIC 349
# define F_VARARGS 350
# define F_ACTIONS_DEFINED 351
# define F_ADD_ACTION 352
# define F_ADD_WORTH 353
# define F_ALL_INVENTORY 354
# define F_ALLOCATE 355
# define F_ALLOCATE_MAPPING 356
# define F_AUTHOR_STATS 357
# define F_BREAK_POINT 358
# define F_CACHE_STATS 359
# define F_CALL_OTHER 360
# define F_CALL_OUT 361
# define F_CALL_OUT_INFO 362
# define F_CAPITALIZE 363
# define F_CAT 364
# define F_CHILDREN 365
# define F_CLEAR_BIT 366
# define F_CLONE_OBJECT 367
# define F_CLONEP 368
# define F_COMMAND 369
# define F_CP 370
# define F_CRYPT 371
# define F_CTIME 372
# define F_DEBUG_INFO 373
# define F_DEEP_INHERIT_LIST 374
# define F_DEEP_INVENTORY 375
# define F_DESTRUCT 376
# define F_DISABLE_COMMANDS 377
# define F_DOMAIN_STATS 378
# define F_DUMP_FILE_DESCRIPTORS 379
# define F_DUMP_SOCKET_STATUS 380
# define F_DUMPALLOBJ 381
# define F_EACH 382
# define F_ED 383
# define F_ENABLE_COMMANDS 384
# define F_ENABLE_WIZARD 385
# define F_ENVIRONMENT 386
# define F_EVENT 387
# define F_EXEC 388
# define F_EXPLODE 389
# define F_EXPORT_UID 390
# define F_EXTRACT 391
# define F_FILE_LENGTH 392
# define F_FILE_NAME 393
# define F_FILE_SIZE 394
# define F_FILTER_ARRAY 395
# define F_FIND_CALL_OUT 396
# define F_FIND_LIVING 397
# define F_FIND_OBJECT 398
# define F_FIND_PLAYER 399
# define F_FIRST_INVENTORY 400
# define F_FUNCTION_EXISTS 401
# define F_GET_CHAR 402
# define F_GET_DIR 403
# define F_GETEUID 404
# define F_GETUID 405
# define F_IMPLODE 406
# define F_IN_EDIT 407
# define F_IN_INPUT 408
# define F_INHERIT_LIST 409
# define F_INPUT_TO 410
# define F_INTERACTIVE 411
# define F_INTP 412
# define F_KEYS 413
# define F_LINK 414
# define F_LIVING 415
# define F_LOCALTIME 416
# define F_LOG_FILE 417
# define F_LOWER_CASE 418
# define F_MALLOC_STATUS 419
# define F_MAP_ARRAY 420
# define F_MAP_DELETE 421
# define F_MAPP 422
# define F_MASTER 423
# define F_MEMBER_ARRAY 424
# define F_MESSAGE 425
# define F_MKDIR 426
# define F_MOVE_OBJECT 427
# define F_MUD_NAME 428
# define F_MUD_STATUS 429
# define F_NEW 430
# define F_NEXT_INVENTORY 431
# define F_NEXT_LIVING 432
# define F_NOTIFY_FAIL 433
# define F_NULLP 434
# define F_OBJECTP 435
# define F_OPCPROF 436
# define F_PLURALIZE 437
# define F_POINTERP 438
# define F_PRESENT 439
# define F_PREVIOUS_OBJECT 440
# define F_PRINTF 441
# define F_PROCESS_STRING 442
# define F_QUERY_HOST_NAME 443
# define F_QUERY_IDLE 444
# define F_QUERY_IP_NAME 445
# define F_QUERY_IP_NUMBER 446
# define F_QUERY_LOAD_AVERAGE 447
# define F_QUERY_SNOOP 448
# define F_QUERY_VERB 449
# define F_RANDOM 450
# define F_READ_BYTES 451
# define F_READ_FILE 452
# define F_RECEIVE 453
# define F_REGEXP 454
# define F_REMOVE_ACTION 455
# define F_REMOVE_CALL_OUT 456
# define F_RENAME 457
# define F_REPLACE_STRING 458
# define F_RESTORE_OBJECT 459
# define F_RM 460
# define F_RMDIR 461
# define F_RUSAGE 462
# define F_SAVE_OBJECT 463
# define F_SET_AUTHOR 464
# define F_SET_BIT 465
# define F_SET_DEBUG_LEVEL 466
# define F_SET_HEART_BEAT 467
# define F_SET_HIDE 468
# define F_SET_LIGHT 469
# define F_SET_LIVING_NAME 470
# define F_SETEUID 471
# define F_SHADOW 472
# define F_SHUTDOWN 473
# define F_SIZEOF 474
# define F_SNOOP 475
# define F_SOCKET_ACCEPT 476
# define F_SOCKET_ACQUIRE 477
# define F_SOCKET_ADDRESS 478
# define F_SOCKET_BIND 479
# define F_SOCKET_CLOSE 480
# define F_SOCKET_CONNECT 481
# define F_SOCKET_CREATE 482
# define F_SOCKET_ERROR 483
# define F_SOCKET_LISTEN 484
# define F_SOCKET_RELEASE 485
# define F_SOCKET_WRITE 486
# define F_SORT_ARRAY 487
# define F_SPRINTF 488
# define F_STAT 489
# define F_STRCMP 490
# define F_STRINGP 491
# define F_STRLEN 492
# define F_SWAP 493
# define F_TAIL 494
# define F_TELL_OBJECT 495
# define F_TEST_BIT 496
# define F_THIS_OBJECT 497
# define F_THIS_PLAYER 498
# define F_THROW 499
# define F_TIME 500
# define F_TRACE 501
# define F_TRACEPREFIX 502
# define F_UNDEFINEDP 503
# define F_UNIQUE_ARRAY 504
# define F_UPTIME 505
# define F_USERP 506
# define F_USERS 507
# define F_VALUES 508
# define F_VERSION 509
# define F_WIZARDP 510
# define F_WRITE_BYTES 511
# define F_WRITE_FILE 512
