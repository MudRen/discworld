Wed Apr 22 21:43:21 CDT 1992 Truilkan@TMI
	* bumped the patchlevel number to 0.8.14
	* added the CONFIG_FILE_DIR back to config.h due to popular demand
	* mucked some with prototypes that were giving some people problems
	* added in Wayf's changes to GNUmakefile
	* split CALL_EXIT into ROOM_CALL_EXIT and ALL_CALL_EXIT (see config.h
	  for details)
	* added a fix to ed.c to prevent driver from dumping core when
	  ed displays way long lines. (whiplash@TMI reported this)

Tue Apr 14 14:19:36 CDT 1992 Truilkan@TMI
	* bumped the patchlevel number to 0.8.13
	* changed name of do_message() efun back to message() (turns out that
	  only the name of the function called from inside the F_MESSAGE case
	  in interpret.c needed to be changed to do_message()).
	* fixed a bug in call_all_other in interpret.c (pushing same value onto
	  stack numargs times)
	* fixed another bug in call_all_other (wasn't popping right number
	  of things off the stack).
	* added Shadowhawk's dprint option to ed.c (automatic print after delete)
	* added tell_npc(ob,str) back to end of object.c:tell_object (was
	  mistakenly removed a few releases back).  -- Soulsinger@Dreamshadow
	  noticed this one.
	* changed svalue_to_int in mapping.c to explicitly handle T_OBJECT
	* applied Wayf's fix to simulate.c so that the failed to load file
	  message is specific.
	* added Darker Realm's interpret.c:F_ADD fix for a memory leak
	* added a fix to keep error messages generated by clean_up from going
	  to a random player (whoever happens to be this_player() at the time).
	* changed a the wording of a few error messages to make more sense
	* added object type O_MASTER.  fixed validate_shadowing so it will not
	  allow shadowing of the master object (previously this had to be
	  explicitly prevented in master.c itself).
	* changed all malloc's to MALLOC's and free's to FREE's etc.
	  so that stats can be kept on system malloc and so that smalloc.
	  can be used on machines that don't allow malloc to be redefined.
	  Any additions to the driver should not use malloc(), free(), realloc(),
	  or calloc().  Instead use the capitalized versions of these.  Any
	  c module using these should include both config.h and lint.h in
	  that order.  The desired memory package must now be specified in
	  config.h.  Added make_malloc.c.
	* added a link(string,string) efun to do UNIX links.  queries
	  valid_ln(string source,string target) in master.c.
	* fixed F_SHUTDOWN in interpret.c so that it actually pays attention
	  to the value returned by valid_shutdown in master.c
	* enhanced sizeof() to work on mappings as well.  Because of the
	  implementation of mappings this efun is really only useful to see
	  whether or not a mapping has just been set to ([]).
	  e.g. if (!sizeof(mapping)) do_something();
	* cleaned up the shared string hash table data structure.
	* modified object_present() in simulate.c so that if OLD_PRESENT isn't
	  #defined, the present() efun behaves in a new way.  If present calls
	  id() in an object and id() returns an object, then present will
	  return the object returned to it by id().  The potential uses for
	  this are left up to the imagination of the reader (oh well... ok.
	  You could use it to make a charmed monster that made you attack someone
	  else in the room whenever you tried to attack it.   You could also
	  use it to make a chair that let you look at whoever was inside it by
	  typing "look at joe" or whoever).  -- this one was at the request of
	  Jubal@TMI.
	* added conditional code to move_object so that if CALL_EXIT is
	  defined in config.h, then move_object will call the "exit" method
	  in objects in the inverse manner in which "init" is called.
	  That is, when a living object leaves a room, it will call "exit"
	  on the room and on each living object in the room.  Each living
	  in the room will also call "exit" on the living leaving the room.
	  This is expensive and so it is optional.  This functionality
	  was added at the request of Dainia@Dreamshadow.
	* fixed a bug in F_RECEIVE (wasn't saving command_giver).  This lets
	  INTERACTIVE_CATCH_TELL be safely defined in config.h.  Defining
	  INTERACTIVE_CATCH_TELL causes tell_object to call catch_tell in
	  interactives.  The catch_tell can call receive(str) to display
	  the message to the interactive.
	* changed driver so that everything goes to catch_tell if
	  INTERACTIVE_CATCH_TELL is defined (shouts, says, tell, room tells).
	  Also changed things so that monsters get shouts via catch_tell.

Mon Apr 13 13:40:27 CDT 1992 Truilkan@TMI

	* bumped the patchlevel number to 0.8.12
	* changed comm1.c so that FIONBIO isn't used for sun3's.  some number of
      them seem not to be able to handle that ioctl.
	* fixed in_input and in_edit in interpret.c to pop the stack like they
	  should (Pariah@TMI found this one).

Sun Apr 12 20:55:26 CDT 1992 Truilkan@TMI

	* bumped the patchlevel number to 0.8.11
	* fixed set_bit, test_bit, and clear_bit so that they work and produce
	  printable strings once again (somebody mucked with them)
	* refixed bug causing game to consider ! an escape even when not in
	  ed or input_to (somehow this fix was lost)
	* added Vincent's Hollow's patch to lex. to allow token pasting (using ##)

Sun Apr 12 04:56:56 CDT 1992  Truilkan@TMI

	* bumped the patchlevel number to 0.8.10
	* updated the installation documentation in ./README and ./doc/install

Sat Apr 11

	* bumped the patchlevel number to 0.8.9
	* no real changes (fixed a problem that was causing patches to
	the Makefile to be rejected -- Buddha's makefile was out of sync with
	the one I was using). 

Sat Apr 11 03:59:46 CDT 1992  Truilkan@TMI

	* bumped the patchlevel number to 0.8.8
	* renamed delete() to be map_delete() and fixed a bug in the
	F_MAP_DELETE case of interpret.c.

Thu Apr  9 22:55:49 CDT 1992  Truilkan@TMI

	* bumped the patchlevel number to 0.8.7
	* refixed save_object so that it can save 2-d mappings
	* changed reset_object so that it undefines this_player while reset is
	  called (so that charlie brown doesn't get snoopy's error messages).

Thu Mar  5 00:13:55 CST 1992  Truilkan@TMI
 
 	* bumped the patchlevel number to 0.8.6
 	* added Lars 3.1.1-3.1.2 diffs (the one that we hadn't already found)
 	* added efun undefinedp().  This was added to
 	make it unnecessary to overload zero (0) to mean two different things
 	(zero and/or undefined). call_other()'s on nonexistant methods
 	return undefined (const0u) and map references on keys not in map return
 	undefined (const0u).  This is, the value returned by a call_other on
 	a nonexistant method will caused undefinedp(value) to return TRUE etc.
 	* modified the makefile (not gnu makefile) to move y.tab.h to lang.tab.h
 	and y.tab.c to lang.tab.c (to be compatible with the GNU makefile).
 	* fixed a bug in backend.c just after process_input was called
	(was accessing ret->type even when ret was NULL) - Wayf found this one.
	* changed Huthar's message() to be do_message() (at request of Wayfarer)
 	* changed call_out.c so that call_out's are legal on static methods
 	(added code that temporarily changes current_object).
 	* added delete(map,element) which deletes an element from a map
 	* fixed save_object so that it can save 2-d mappings

Wed Mar  4 21:33:09 1992  Erik Kay  (erikkay at panacea.media.mit.edu)

	* removed all RCS stuff from the driver.  The current
	implementation sucks, so we'll take it out until it's rewritten
	better.

	* bumped the patchlevel number to 0.8.5

	* added two new efuns to the driver courtesy of Huthar of Portals
	and TMI.  children(object): returns all objects which were cloned
	from the object you pass to it, and message (string msg, string
	class,	mixed targets, object *exclude_targets).  This efun is a
	generic messaging function meant to replace all current
	communication efuns in the future (say, shout, tell_*, printf,
	write, etc).  It communicates directly to catch_tell in the
	targets.

	* added the file GNUmakefile to the dist which allows GNU make to
	be used with some greater flexibility in the compile cycle.

	* added support to allow yacc to be replaced with bison if so
	desired. 

	* fixed a couple of parser bugs in postlang.y revealed by using
	bison. 

	* cleaned up a number of warning messages generated by gcc 2.0.

	* cleaned up the Makefile still more. (there was a lot of useless
	stuff in it)

	* merged in Truilkan's fix to the memory leak in indices(), that was
	causing extra arrays to sit around.

Sat Feb 22 14:28:35 1992  Erik Kay  (erikkay at panacea.media.mit.edu)

	* made addition so that crash() could be defined static in
	master.c so that users can't do a call_other on it.

	* fixed the bug which screwed up the swap file location if you had
	a leading space.  It's now a file relative to the mudlib's home.

	* removed all dependance on query_player_level from the driver.
	It is now no longer needed in master.c.  (trace and traceprefix
	use O_IS_WIZARD)

	* changed the call to query_allow_shadow to valid_shadow to be
	more consistant with master.c naming conventions.

	* changed the apply of get_wiz_name in wiz_list.c to creator_file
	so that we don't have to have two functions which do exactly the
	same thing.

	* made set_inc_list happen before the master object is loaded so
	that the master object doesn't have to use explicit path names in
	it's #includes.

	* made simul_efun load before the master object so that the master
	object doesn't have to inherit simul_efun.

Fri Feb 21 18:30:36 1992  Erik Kay  (erikkay at panacea.media.mit.edu)

	* Added make depend instructions to the README file.

	* Fixed bug in rlog which caused the driver to dump core.  RCS
	should work (at least partially) now.

	* Commented out interactive catch tell code, since it's dumping
	the driver.  No clue on this one guys.

	* Took out all #ifdef LPCA and #ifndef LPCA since we always want
	that behavior.

	* Redid the Makefile to use makedepend.  Took -DLPCA out of the
	makefile as well as TRACE_CODE.

Thu Feb 20 00:35:40 CST 1992 Truilkan@TMI [0.8.2]

    * Added #include "config.h" to port.c so that the chosen random
    number generator will be used (instead of the default bad one).
    This corrects a bug introduced when -DRANDOM was moved out of
    the Makefile and into config.h.

    * fixed a bug in lex.c related to the C++ // style comments that
    could cause an infinite loop under certain circumstances.

    * added a #define INTERACTIVE_CATCH_TELL to config.h which should
    be defined if you want catch_tell to be called on interactives as
    well as NPCs (you'll need to define a catch_tell that calls receive()
    if you use this option).

    * Figured out why dumpallobj was crashing the mud.  It was because
    dumpstat.c wasn't grokking the T_MAPPING type (32).  I added
    a couple of empty cases to the switch statement to prevent crashing
    but Whiplash needs to go in and add code for those cases.

    * updated the doc/install file.


Tue Feb 18 18:51:57 1992  Erik Kay  (erikkay at dearth.media.mit.edu) [0.8.1]

	* commented out dumpallobj until we can fix it.

	* Made enable_wizard() require that the caller be interactive.  It
	now returns 1 on success, and 0 on failure.

	* Removed ETCDIR from the Makefile, and replaced it with
	CONFIG_FILE_DIR in config.h.  Put an explanation around it, so that
	there was no confusion as to its purpose.

	* Changed the config variable "include directories" so that it no
	longer needs the /%s on the trailing end.  So instead of /sys/%s,
	you can have /sys instead.

 
	* split part of config.h into options.h (the part that contains the
	  the macros that may need changed).
	* removed clilib.c from the distribution since Jacques already removed
	  the mudwho stuff from comm1.c anyway.  Mudwho can probably be better
	  handled at the mudlib level using the socket efuns.
	* removed the describe_items efun which was doing nothing at all
	* removed the cindent() efun since we don't even include the indent
	  executable anymore anyway.
	* changed svalue_to_int in mapping.c to handle mappings as well

Thu Aug  6 17:41:48 CDT 1992 (Truilkan@TMI)

	* bumped patchlevel up to 0.8.27
	* fixed bug in save_dstats_file (wasn't malloc'ing enough space)
	* made free_svalue INLINE
	* added a fix to simulate.c:player_parser()... another check to see if
	  command_giver == 0 (crasher shows up if a wiz does a call_other on a
	  function in an object that does a disable_commands -- Positron's code
	  exposed this bug -- I imagine this same bug is in other drivers as well).

Thu Aug  6 00:47:07 CDT 1992 (Jacques@TMI)
	* bumped patchlevel up to 0.8.26
	* Fixed comm1.c so that it no longer confuses MallocDebug into
	  thinking that there is a memory leak.
	* applied the same MallocDebug fix to addr_server.c
	* fixed addr_server_init() in comm1.c so that it no longer aborts
	  the address server connection if the connection is not immediate.

Wed Aug  5 22:56:44 CDT 1992 (Truilkan@TMI)
	* bumped patchlevel up to 0.8.25
	* changed stralloc.c some more to avoid extraneous calls to
	  stralloc.c:findblock() and strlen().
	* changed assign_svalue_no_free so that it calls ref_string
	  instead of make_shared_string when it already knows the string
	  is shared (this change and the stralloc.c changes come at the
	  suggestion of Amylaar).
	* changed *lang.y so that it resets switches and switch_sptr to 0
	  at each new compile (in case previous compile failed).
	* added for_expr to the <type> line in *lang.y (rids us of another
	  warning).
	* added 'maximum string length' to config file.  this value is
	  consulted at all string assignments.  This should help avoid
	  needing excessive cpu time to reach a max_eval.

Wed Aug  5 21:15:52 CDT 1992 (Jacques(TMI))
	* bumped patchlevel up to 0.8.24
	* changed stralloc.c to not use so damned many strlen() calls.
	  should noticeably boost performance (boost comes at a small cost in
	  memory per shared string). -- Tru
	* implemented an address server (addr_server.c) to replace hname.c
	  This server can be run on a different machine from the driver and
	  can accommodate multiple drivers simultaneously. NOTE that the
	  addr_server program must already be running when the driver starts
	  up so that the driver can connect to it.
		usage: addr_server port_number
	* added two (2) new config file entries for the address server:
		address server ip : comet.rice.edu
		address server port : 4445
	  note that at the present time, address server ip MUST be the 
	  symbolic name form.

Wed Aug  5 05:10:02 CDT 1992 (Truilkan@TMI)
	* bumped patchlevel up to 0.8.23
	* fixed the switch/continue bug.  "continue" from inside a "switch"
	  caused the driver to crash because the continue was preventing
	  the "break_sp" stack from being popped.  Solution was to add
	  another eoperator (F_POP_BREAK) and another stack (switch_stack)
	  to *lang.y.  "continue" statements issued from inside a "switch"
	  now generate the code required to pop the "break_sp" stack as
	  many times as exist nested "switch" statements (since the beginning
	  of the nearest containing loop).
	* changed a malloc() in comm1.c to MALLOC()

Tue Aug  4 17:23:30 CDT 1992 (Truilkan@TMI)
	* bumped patchlevel up to 0.8.22
	* fixed various warnings that show up when -Wall flag of gcc is used
          (down to five (5) warnings when using -Wall)
	* fixed a bug in svalue_size that I introduced in 0.8.21 that
	  caused dumpallobj to crash the driver.

Mon Aug  3 21:23:48 CDT 1992 (Truilkan@TMI)
	* bumped patchlevel up to 0.8.21
	* changed rusage() efun (f_rusage) so that it returns more readable
	  information.  It now returns a mapping containing all the 
	  fields from the structure that getrusage() returns.  This one is
	  for Dainia@DreamShadow.  Usage: m = rusage();
	  write("usertime: " + m["usertime"] + "\n"); etc.
	* didn't fix anything in message() *smirkle*
	* added malloc_status efun, replaces hardcoded 'malloc' command
	* added malloc_debug efun, replaces hardcoded 'mallocdebug' command
	  (only available when SMALLOC is defined in config.h)
	* added mud_status efun, replaces 'status' and 'status tables' commands
	* fixed a bug in allocate_mapping that was potentially setting the
	  hashing mask (theMask) incorrectly.
	* fixed the code that gathers statistics on total mapping size
	* oops! I still had some debug code in that was preventing any
	  of the mappings from being freed (this code was introduced after
	  0.8.14 -- i.e. it wasn't in 0.8.14)
	* fixed svalue_size to handle mappings so that dumpallobj now
	  takes mappings into account when reporting data_size.

Mon Aug  3 15:01:21 1992  Erik Kay  (Wayfarer@Portals)

	* bumped patchlevel up to 0.8.20

Mon Aug  3 14:16:57 1992  Erik Kay  (Wayfarer@Portals)

	* made clone_object and load_object do a check_valid_path only if
	VALID_CLONE is defined. (it's defined by default now in config.h)

	* fixed another bug in message() so that it deals with string args
	without crashing.

Mon Aug 3 14:13:42 1992  Erik Kay  (Wayfarer@Portals)

	* COMPAT BUSTER made clone_object and load_object do a
	check_valid_path for read permissions.  Don't want people cloning 
	objects they can't read! (I did this at the request of some users,
	but I think it's going	to introduce some bugs in the euid system.
	For example, let's say I'm a level 1 player, and I move into a
	room which hasn't been loaded.  I think under the current model,
	this object is loaded as the current player, and unless the mudlib
	has security set up so that players can "read" any file they might
	inadvertantly clone, errors will result.  This will cause compat
	problems with existing mudlibs.  You can turn this off by
    undefining VALID_CLONE in config.h.

Mon Aug 3 14:12:46 1992  Erik Kay  (Wayfarer@Portals)

	* I fixed several bugs in message which caused the driver to dump.
	(we were dereferencing some null pointers... ack)  It's amazing
	the bugs you'll find in a efun as soon as you start to *use* it!
	Btw... one other point of note.  When converting a mudlib to use
	message for all of it's message display functions (write, shout,
	etc), it's a *very* good idea to nuke INTERACTIVE_CATCH_TELL,
	since you need to do a tell_object in receive_message(), and going
	through yet another level of indirection is both wasteful and
	*completely* unnecessary. (and confusing!).  Oops... one other
	thing to note with converting completely to using message(): if
	you ever use a different object other than the user object for
	interactive connections (such as a login object or a player
	registration object), make sure that all of these have
	receive_message() defined, or you might get some unusual results.

Mon Aug  3 14:10:11 1992 Truilkan@TMI

	* Bumped the patchlevel number to 0.8.19

	* Changed f_socket_acquire to call socket_acquire and
	f_socket_release to call socket_release (as per Jacques'
	instructions).

Sun Aug  2 22:21:27 CDT 1992  Truilkan@TMI Jacques@TMI Wayfarer@TMI
	* bumped the patchlevel number to 0.8.18 (alpha)
	* applied fix to -= operator (Truilkan)
	* added capability to move a socket from one object to another.
	  This entailed adding two new efuns; socket_release() and
	  socket_acquire().
	* changed socket efuns so that returning 0 doesn't indicate an error.
	* made socket_errors.h file that has #defines of errors and values.
	* changed valid_socket():
	  old way:
		int valid_socket(string eff_user, string fun, string address,
		                 string port)
	  new way:
		int valid_socket(ob calling_ob, string func, mixed *info)
		where info is a 4 element array:
			mixed info[4] :
			info[0] = int fd
			info[1] = object owner
			info[2] = string ip_addr
			info[3] = int port
	* cleaned up usage of flush_all_player_mess().
	* added some defines etc. so that MudOS now compiled on Ultrix.
	* fixed a bug that crept in when add_message() was rewritten. This
	  bug caused VAX/VMS users to not get CR's.
	* added an efun: string socket_error(int error_num). This returns a
	  string version of the socket error.

Thu Jul 23 00:59:40 CDT 1992  Truilkan@TMI Jacques@TMI
        * bumped the patchlevel number to 0.8.17 (alpha)
	* added in major changes to the driver: comm1.c was almost entirely
	  rewritten (again), including add_message() which is now varargs.
	  The driver now implements an event queue -- this is a major change
	  to the way the driver handles events/interrupts. This should/does
	  also fix the infamous "connection bug" in which the driver stopped
	  listening for new connections after a variable length of time.
	* added in the proper include files for compiling efunctions.c and
	  eoperators.c on a sun.
	* changed value of NUM_INTS in rc.c to 23, since another configuration
	  int has been added by Truilkan.
	* fixed a bug with snooping cased by the comm1.c rewrite.
	* fixed the f_catch() bug (major bug) which caused the driver to
	  crash when:
		1) an object containing undeclared variables was loaded.
		2) catch() was used (as in goto cmd in TMI mudlib).
	  This was found/fixed by Truilkan.

Tue Jul 21 01:50:08 CDT 1992  Truilkan@TMI
	* changed the preload call back to where it was (this was the source
	  of the famous "big bug" that caused crashes when updating files
	  with errors (from within other files).  Wayfarer found this.
	  (and boy did *I* feel stupid afterwards! - wayfarer :-)
	* fixed f_message so it pops stack correctly even when it doesn't
	  do the freeavoid (wayfarer found it)

Sun Jul 19 17:22:21 CDT 1992  Truilkan@TMI
	* COMPATIBILITY BUSTER. added a new config file parameter
	  MAX_MAPPING_SIZE.  This was needed in order to prevent someone
	  from bringing the driver to its knees (via excessive use of memory)
	  by repeatedly adding elements to a mapping (say by adding 1,000
	  elements at each heartbeat).  You will need to add this parameter
	  to your mud's config file.  A good rule of thumb is to set this
	  value to be approximately the same as the MAX_ARRAY_SIZE.
	* cleaned up lots of stuff so that it mainly compiles without warnings
	  even with gcc's -Wall option (mostly adding prototypes for efunctions.c).
	* completely rewrote the implementation of the data structure used to
	  store mappings.  It now uses an extensible hash table instead of
	  a binary tree.  This makes deletes more robust.  It should also
	  improve performance since the recursive functions to handle
	  traversing the data structure went away with the change.
	* added values() to supplement keys().  values() returns an array of
	  values that correspond to the indices returned by keys().
	* added each() to traverse a mapping - it returns ({key, value}) a pair
	  at a time.  Returns the null_vector when at end of map.
	* changed lots of code that returned allocate_array(0) to return
      null_array() instead (a shared null vector) which works fine since
	  arrays are copied when extended.
	* moved mapping_save_size and save_mapping into mapping.c (out of object.c)
	* fixed bugs in f_sub_eq and f_subtract and subtract_array (in array.c)
	* fixed a nasty bug in mapping.c:find_for_insert that was allocating
	  memory from the initial contiguous block even when the contiguous
	  block had long been exhausted (net affect was to cause non-malloced
	  memory to be freed at some time in the future).  This could explain
	  a lot of the crashes related to map_delete().

Fri Jul 17 12:40:13 1992  Erik Kay  (Wayfarer@Portals)

	* added a fix to fix the strange initial login problem listed in
	the previous entry.  I basically do a call to new_user_handler()
	just in case a user tried to connect while preloading was
	happening.  It may very well be that similar things need to be
	done just in case some other socket connection is established
	during this time (mail, finger, etc.).  Jacques?

	* changed placement of preload_objects.  It used to be before
	backend() was called, but this causes problems with preloading
	objects which have socket efuns, etc.  Now it is called on the
	first loop through backend().  As a result of this backend now
	takes an arg so that it knows what to pass to preload_objects().
	The only bad side effect I've seen from this is that if a user
	connects before the preloads have finished and happens to
	interrupt an object which is preloading, which his logging in
	causes to preload, a few odd (but non-fatal) results occur.

	* (I actually did this before the other wizlist changes mentioned
	below) Fixed a bug in the driver which caused wizlist with no args
	to dump the driver.

Thu Jul 16 11:50:29 1992  Erik Kay  (Wayfarer@Portals)

	* COMPATIBILITY BUSTER. made some gratuitous changes to the
	wizlist functionality.  Removed wiz_list.[ch], and replaced with a
	functionally identical domain_stats.[ch].  For the most part, all
	that changed were the names.  Efuns that have been changed are:
	wizlist->domain_stats, wizards->domains.  The output for
	domain_stats has been cleaned up as well.  I was going to make
	some major changes, but decided that it really wasn't needed for
	the most part.

	* fixed socket_address so that it returns the correct result,
	rather than 0 like it used to. (it now returns a string formatted
	in the same way that socket_connect takes its string)

	* fixed the socket_efuns so that their call to valid_socket also
	includes a inet address and a port number if appropriate.  both
	are passed as strings.  The appropriate definition of valid_socket
	is as follows: int valid_socket (string eff_user, string function,
	string address, string port);

Wed Jul 15 20:25:16 1992  Erik Kay  (Wayfarer@Portals)

	* COMPATIBILITY BUSTER! Changed the behavior of message() so that
	instead of calling catch_tell, it instead calls
	receive_message(string class, string msg) in the target objects.

	* fixed the LOG_SHOUTS function to work use query_cap_name, and to
	then fall back to query_name.  Previous to this, it was using
	query_real_name, which isn't used in most MudOS mudlibs in the
	same sense that the driver intended.

Fri Jul 10 21:05:30 1992  Erik Kay  (Wayfarer@Portals)

	* added >>some<< of Whiplash's changes in.  Specifically, the
	patch to hidden objects, which allowed them to actually be hidden.
	(I'm not sure I like this) The other addition is a maximum inherit
	chain size to prevent infinite inherit chains.  This is a
	compatibility buster as it requires a new addition to the runtime
	config file: "inherit chain size".  The number value given is the
	max depth of inheritance the driver will allow.

	* made call_other's so that you don't have to cast the return
	value.  This is controlled via a #define in config.h:
	CAST_CALL_OTHERS.  If undefined, casting is optional.

	* COMPATIBILITY BUSTER!!! - made destruct call valid_destruct()
	before it can legally destruct.  valid_destruct takes two args
	(string eff_user, object ob).  The first if the eff_user of the
	object which is trying to do the destruct, and the second is the
	object which is being destructed.  valid_destruct isn't called if
	the destructing object is the same as the object being destructed.

Fri Jul  3 13:58:55 1992  Erik Kay  (Wayfarer@Portals)

	* COMPATIBILITY BUSTER!!! - I made all socket efuns return 1 for
	success. A return value of 0 indicates a failed call to
	valid_socket. (not really much of a compat buster since all of
	about 4 people were using 0.8.15 :-)

	* made all socket efuns call valid_socket in master.c.  That
	function takes two arguments.  The first is the euid of the
	caller, the second is the socket function being called ("close",
	"connect", "write", etc).  Any value returned which is non-zero is
	a success.

	* fixed explode so that if passed a null delimiter, it returns
	each character of the string as a separate string (truilkan)

	* fixed stack corruption problem in f_message()

	* fixed stack corruption caused by f_deep_inventory(truilkan)

	* copy_file now closes files (heh) (truilkan)

	* fixed load_object and find object so that they generate errors
	on multiple "/"'s in pathnames

	* fixed legal_path so that on amigas it fails if there's a : in
	the pathname (the #ifdef is probably wrong though)

Sat Jun 27 00:38:10 CDT 1992  Truilkan@TMI
	* bumped the patchlevel number to 0.8.16 (alpha)
	* fixed f_get_dir so that it pops its args like it should
	* fixed mapping_indices so that it doesn't do v->refs-- since
	  f_keys already does it.  the code that mucks with refs definitely
	  needs reworked... maybe refs should be initialized to 0 instead of 1.
	* moved %token F_CASE, F_DEFAULT, and F_RANGE from postlang.y to
	  prelang.y so that "if (instruction >= BASE)" test works properly.
	* added a few prototypes to lint.h to handle eoperations.c calling
	  functions in interpret.c
	* replaced sprintf.c 1.04 with 1.05 from ucbvax.berkeley.edu ftpsite
	* changed check for HIDDENs in find_living_object so that it
	  wouldn't hang the mud.
	* added 'eval_cost = 0' to look_for_objects_to_swap so that
	  won't get max eval exceeded when have many objects to cycle through.

Wed May 20 11:47:26 1992  Erik Kay  (erikkay at milo.mit.edu)

	* fixed GNUmakefile so that it works with 0.8.15 stuff.

	* bug fix to interpret.c to allow comparisons between mappings.
	Like arrays, this does pointer compares and not content compares.

	* fixed bug in rc.c which got confused by near duplicate entries

	* merged in Jacques bug fixes to comm and socket efuns

Thu Apr 23 02:20:05 CDT 1992 Truilkan@TMI
	* bumped the patchlevel number to 0.8.15
	* added Shadowhawk@TMI's patch to input_to to allow multiple arguments
	  which get passed on to the function called by input_to!
	* added Michael's changes to the GNUmakefile (Wayf had left in some
	  localized specials)
	* deleted a line in lint.h that was causing problems _flshbuf or
	  some such (messed up AIX 3.2 and Utlrix 4.2)
	* fixed prototype of do_message() in lint.h
	* changed name of set() in ed.c to ed_set() (wayf wanted it)
	* modified make_func.y to produce efunctions.h and efun_table.h
	* added Jacques's mods for comm1.c, backend.c and comm.h
	* fixed save_mapping not to save deleted nodes
	* removed Shadowhawk's dprint addition to ed.c.  Somehow it was screwing
	  up the 'I' indent command in ed.
	* added back Shadowhawk's mods to ed.c.  He found the problem.
	* fixed bug in lex.c that causes the driver to crash if one tried to
	  load a file in root (/)
	* fixed another bug in call_all_other (still wasn't pushing args on right)
	* removed CALL_EXIT options (should go in mudlib if wanted)
	* included config.h before lint.h in port.c instead of after.  this should
	  fix the drand48 bug.
	* fixed defn's of IS_ZERO and IS_UNDEFINED in interpret.h.  Was crashing
	  the driver under certain circumstances. (Jubal@TMI found this one)
	* added Jacques socket efuns.  These are totally cool!  Read
	  ./doc/socket.notes for more info.
	* made StrHash in stralloc.c into a macro.  call init_strings from
	  main.c now instead of in StrHash (saves an if statement).
	* note there is a bug in rc.c that I'm leaving for Wayfarer to fix.
	  it reads "living hash table size" in place of "hash table size".
	  solution is to switch the order of these two in your config file
	  so that "hash table size" comes first.

Wed Apr 22 21:43:21 CDT 1992 Truilkan@TMI
	* bumped the patchlevel number to 0.8.14
	* added the CONFIG_FILE_DIR back to config.h due to popular demand
	* mucked some with prototypes that were giving some people problems
	* added in Wayf's changes to GNUmakefile
	* split CALL_EXIT into ROOM_CALL_EXIT and ALL_CALL_EXIT (see config.h
	  for details)
	* added a fix to ed.c to prevent driver from dumping core when
	  ed displays way long lines. (whiplash@TMI reported this)

Tue Apr 14 14:19:36 CDT 1992 Truilkan@TMI
	* bumped the patchlevel number to 0.8.13
	* changed name of do_message() efun back to message() (turns out that
	  only the name of the function called from inside the F_MESSAGE case
	  in interpret.c needed to be changed to do_message()).
	* fixed a bug in call_all_other in interpret.c (pushing same value onto
	  stack numargs times)
	* fixed another bug in call_all_other (wasn't popping right number
	  of things off the stack).
	* added Shadowhawk's dprint option to ed.c (automatic print after delete)
	* added tell_npc(ob,str) back to end of object.c:tell_object (was
	  mistakenly removed a few releases back).  -- Soulsinger@Dreamshadow
	  noticed this one.
	* changed svalue_to_int in mapping.c to explicitly handle T_OBJECT
	* applied Wayf's fix to simulate.c so that the failed to load file
	  message is specific.
	* added Darker Realm's interpret.c:F_ADD fix for a memory leak
	* added a fix to keep error messages generated by clean_up from going
	  to a random player (whoever happens to be this_player() at the time).
	* changed a the wording of a few error messages to make more sense
	* added object type O_MASTER.  fixed validate_shadowing so it will not
	  allow shadowing of the master object (previously this had to be
	  explicitly prevented in master.c itself).
	* changed all malloc's to MALLOC's and free's to FREE's etc.
	  so that stats can be kept on system malloc and so that smalloc.
	  can be used on machines that don't allow malloc to be redefined.
	  Any additions to the driver should not use malloc(), free(), realloc(),
	  or calloc().  Instead use the capitalized versions of these.  Any
	  c module using these should include both config.h and lint.h in
	  that order.  The desired memory package must now be specified in
	  config.h.  Added make_malloc.c.
	* added a link(string,string) efun to do UNIX links.  queries
	  valid_ln(string source,string target) in master.c.
	* fixed F_SHUTDOWN in interpret.c so that it actually pays attention
	  to the value returned by valid_shutdown in master.c
	* enhanced sizeof() to work on mappings as well.  Because of the
	  implementation of mappings this efun is really only useful to see
	  whether or not a mapping has just been set to ([]).
	  e.g. if (!sizeof(mapping)) do_something();
	* cleaned up the shared string hash table data structure.
	* modified object_present() in simulate.c so that if OLD_PRESENT isn't
	  #defined, the present() efun behaves in a new way.  If present calls
	  id() in an object and id() returns an object, then present will
	  return the object returned to it by id().  The potential uses for
	  this are left up to the imagination of the reader (oh well... ok.
	  You could use it to make a charmed monster that made you attack someone
	  else in the room whenever you tried to attack it.   You could also
	  use it to make a chair that let you look at whoever was inside it by
	  typing "look at joe" or whoever).  -- this one was at the request of
	  Jubal@TMI.
	* added conditional code to move_object so that if CALL_EXIT is
	  defined in config.h, then move_object will call the "exit" method
	  in objects in the inverse manner in which "init" is called.
	  That is, when a living object leaves a room, it will call "exit"
	  on the room and on each living object in the room.  Each living
	  in the room will also call "exit" on the living leaving the room.
	  This is expensive and so it is optional.  This functionality
	  was added at the request of Dainia@Dreamshadow.
	* fixed a bug in F_RECEIVE (wasn't saving command_giver).  This lets
	  INTERACTIVE_CATCH_TELL be safely defined in config.h.  Defining
	  INTERACTIVE_CATCH_TELL causes tell_object to call catch_tell in
	  interactives.  The catch_tell can call receive(str) to display
	  the message to the interactive.
	* changed driver so that everything goes to catch_tell if
	  INTERACTIVE_CATCH_TELL is defined (shouts, says, tell, room tells).
	  Also changed things so that monsters get shouts via catch_tell.

Mon Apr 13 13:40:27 CDT 1992 Truilkan@TMI

	* bumped the patchlevel number to 0.8.12
	* changed comm1.c so that FIONBIO isn't used for sun3's.  some number of
      them seem not to be able to handle that ioctl.
	* fixed in_input and in_edit in interpret.c to pop the stack like they
	  should (Pariah@TMI found this one).

Sun Apr 12 20:55:26 CDT 1992 Truilkan@TMI

	* bumped the patchlevel number to 0.8.11
	* fixed set_bit, test_bit, and clear_bit so that they work and produce
	  printable strings once again (somebody mucked with them)
	* refixed bug causing game to consider ! an escape even when not in
	  ed or input_to (somehow this fix was lost)
	* added Vincent's Hollow's patch to lex. to allow token pasting (using ##)

Sun Apr 12 04:56:56 CDT 1992  Truilkan@TMI

	* bumped the patchlevel number to 0.8.10
	* updated the installation documentation in ./README and ./doc/install

Sat Apr 11

	* bumped the patchlevel number to 0.8.9
	* no real changes (fixed a problem that was causing patches to
	the Makefile to be rejected -- Buddha's makefile was out of sync with
	the one I was using). 

Sat Apr 11 03:59:46 CDT 1992  Truilkan@TMI

	* bumped the patchlevel number to 0.8.8
	* renamed delete() to be map_delete() and fixed a bug in the
	F_MAP_DELETE case of interpret.c.

Thu Apr  9 22:55:49 CDT 1992  Truilkan@TMI

	* bumped the patchlevel number to 0.8.7
	* refixed save_object so that it can save 2-d mappings
	* changed reset_object so that it undefines this_player while reset is
	  called (so that charlie brown doesn't get snoopy's error messages).

Thu Mar  5 00:13:55 CST 1992  Truilkan@TMI
 
 	* bumped the patchlevel number to 0.8.6
 	* added Lars 3.1.1-3.1.2 diffs (the one that we hadn't already found)
 	* added efun undefinedp().  This was added to
 	make it unnecessary to overload zero (0) to mean two different things
 	(zero and/or undefined). call_other()'s on nonexistant methods
 	return undefined (const0u) and map references on keys not in map return
 	undefined (const0u).  This is, the value returned by a call_other on
 	a nonexistant method will caused undefinedp(value) to return TRUE etc.
 	* modified the makefile (not gnu makefile) to move y.tab.h to lang.tab.h
 	and y.tab.c to lang.tab.c (to be compatible with the GNU makefile).
 	* fixed a bug in backend.c just after process_input was called
	(was accessing ret->type even when ret was NULL) - Wayf found this one.
	* changed Huthar's message() to be do_message() (at request of Wayfarer)
 	* changed call_out.c so that call_out's are legal on static methods
 	(added code that temporarily changes current_object).
 	* added delete(map,element) which deletes an element from a map
 	* fixed save_object so that it can save 2-d mappings

Wed Mar  4 21:33:09 1992  Erik Kay  (erikkay at panacea.media.mit.edu)

	* removed all RCS stuff from the driver.  The current
	implementation sucks, so we'll take it out until it's rewritten
	better.

	* bumped the patchlevel number to 0.8.5

	* added two new efuns to the driver courtesy of Huthar of Portals
	and TMI.  children(object): returns all objects which were cloned
	from the object you pass to it, and message (string msg, string
	class,	mixed targets, object *exclude_targets).  This efun is a
	generic messaging function meant to replace all current
	communication efuns in the future (say, shout, tell_*, printf,
	write, etc).  It communicates directly to catch_tell in the
	targets.

	* added the file GNUmakefile to the dist which allows GNU make to
	be used with some greater flexibility in the compile cycle.

	* added support to allow yacc to be replaced with bison if so
	desired. 

	* fixed a couple of parser bugs in postlang.y revealed by using
	bison. 

	* cleaned up a number of warning messages generated by gcc 2.0.

	* cleaned up the Makefile still more. (there was a lot of useless
	stuff in it)

	* merged in Truilkan's fix to the memory leak in indices(), that was
	causing extra arrays to sit around.

Sat Feb 22 14:28:35 1992  Erik Kay  (erikkay at panacea.media.mit.edu)

	* made addition so that crash() could be defined static in
	master.c so that users can't do a call_other on it.

	* fixed the bug which screwed up the swap file location if you had
	a leading space.  It's now a file relative to the mudlib's home.

	* removed all dependance on query_player_level from the driver.
	It is now no longer needed in master.c.  (trace and traceprefix
	use O_IS_WIZARD)

	* changed the call to query_allow_shadow to valid_shadow to be
	more consistant with master.c naming conventions.

	* changed the apply of get_wiz_name in wiz_list.c to creator_file
	so that we don't have to have two functions which do exactly the
	same thing.

	* made set_inc_list happen before the master object is loaded so
	that the master object doesn't have to use explicit path names in
	it's #includes.

	* made simul_efun load before the master object so that the master
	object doesn't have to inherit simul_efun.

Fri Feb 21 18:30:36 1992  Erik Kay  (erikkay at panacea.media.mit.edu)

	* Added make depend instructions to the README file.

	* Fixed bug in rlog which caused the driver to dump core.  RCS
	should work (at least partially) now.

	* Commented out interactive catch tell code, since it's dumping
	the driver.  No clue on this one guys.

	* Took out all #ifdef LPCA and #ifndef LPCA since we always want
	that behavior.

	* Redid the Makefile to use makedepend.  Took -DLPCA out of the
	makefile as well as TRACE_CODE.

Thu Feb 20 00:35:40 CST 1992 Truilkan@TMI [0.8.2]

    * Added #include "config.h" to port.c so that the chosen random
    number generator will be used (instead of the default bad one).
    This corrects a bug introduced when -DRANDOM was moved out of
    the Makefile and into config.h.

    * fixed a bug in lex.c related to the C++ // style comments that
    could cause an infinite loop under certain circumstances.

    * added a #define INTERACTIVE_CATCH_TELL to config.h which should
    be defined if you want catch_tell to be called on interactives as
    well as NPCs (you'll need to define a catch_tell that calls receive()
    if you use this option).

    * Figured out why dumpallobj was crashing the mud.  It was because
    dumpstat.c wasn't grokking the T_MAPPING type (32).  I added
    a couple of empty cases to the switch statement to prevent crashing
    but Whiplash needs to go in and add code for those cases.

    * updated the doc/install file.


Tue Feb 18 18:51:57 1992  Erik Kay  (erikkay at dearth.media.mit.edu) [0.8.1]

	* commented out dumpallobj until we can fix it.

	* Made enable_wizard() require that the caller be interactive.  It
	now returns 1 on success, and 0 on failure.

	* Removed ETCDIR from the Makefile, and replaced it with
	CONFIG_FILE_DIR in config.h.  Put an explanation around it, so that
	there was no confusion as to its purpose.

	* Changed the config variable "include directories" so that it no
	longer needs the /%s on the trailing end.  So instead of /sys/%s,
	you can have /sys instead.

 
